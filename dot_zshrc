# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/prinzpiuz/.oh-my-zsh"
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="af-magic" 

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git git-prompt git-commit themes command-not-found adb aliases debian)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#to source work related aliases and commands, which will not staged in git
source /home/prinzpiuz/.extraZshRc

#android home
export ANDROID_HOME=/usr/lib/Android
export PATH=$ANDROID_HOME/tools:$PATH
export PATH=$ANDROID_HOME/tools/bin:$PATH
export PATH=$ANDROID_HOME/platform-tools:$PATH

#android sdk root
export ANDROID_SDK_ROOT=/usr/lib/Android
export PATH=$ANDROID_SDK_ROOT:$PATH

#flutter
export FLUTTER_HOME=/usr/lib/flutter
export PATH=$FLUTTER_HOME/bin:$PATH

export CHROME_EXECUTABLE=/usr/bin/firefox

#gradle
# export GRADLE_HOME=/opt/gradle/gradle-7.5.1
export GRADLE_HOME=/opt/gradle/gradle-5.6.2
export PATH=$GRADLE_HOME/bin:$PATH

#java
# export JAVA_HOME=$(readlink -f /usr/bin/javac | sed "s:/bin/javac::")
export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
export PATH=$PATH:$JAVA_HOME/bin
# export PATH=$PATH:/usr/lib/jvm/java-8-openjdk-amd64/bin

ANT_HOME="/usr/local/ant"
PATH="$PATH:/usr/local/ant/bin"
export ANT_HOME
export PATH

#go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
export PATH=$PATH:/usr/local/go/bin

#BLUETOOTH
alias bt="bluetoothctl power on && bluetoothctl connect E4:41:22:B5:CA:12"
alias bt_off="bluetoothctl power off"

#  bindkey -v #to change zsh into vi mode
#  #key bindings for zsh vi mode
#  bindkey "^R" history-incremental-search-backward #to map reverse recursive search to ctrl+r
#  bindkey "^[." insert-last-word #to insert argument of last command

# #to show the current vi mode as status line in terminal
# function zle-line-init zle-keymap-select {
#     RPS1="${${KEYMAP/vicmd/-- NORMAL --}/(main|viins)/-- INSERT --}"
#     RPS2=$RPS1
#     zle reset-prompt
# }
# zle -N zle-line-init
# zle -N zle-keymap-select

#commands to manage postgres
alias pg_start="systemctl start postgresql"
alias pg_restart="systemctl restart postgresql"
alias pg_stop="systemctl stop postgresql"
alias pg_admin="sudo su - postgres"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#command for managing mysql
alias mstart="systemctl start mysql"
alias mstop="systemctl stop mysql"
alias mstatus="systemctl status mysql"
alias mrestart="systemctl restart mysql"

alias rstart="systemctl start redis-server"
alias rstop="systemctl stop redis-server"
alias rstatus="systemctl status redis-server"
alias rrestart="systemctl restart redis-server"

#debian repository update and system applications upgrade
alias update="sudo apt update && sudo apt upgrade -y"

alias run="python manage.py runserver || flutter run"

#this is for balena-cli for raspberry pi
export PATH="$PATH:/home/prinzpiuz/balena-cli"

alias Ipython3="python3 -m IPython"

#to launch flutter emulator
alias android="flutter emulator --launch pixel"

#to do ping test
alias p="ping -i 1 -c 5 -w 30 -q 8.8.8.8"

#to make a file non deletable
alias nd="sudo chattr +i"

#ibus environment variables
export GTK_IM_MODULE=ibus
export QT_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

#librespeed cli https://github.com/librespeed/speedtest-cli
#connecting to banglore server
#installed in /usr/local/bin
alias speed="~/bin/librespeed-cli-linux-amd64 --server 4 --bytes"

#linux homebrew installation
echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/prinzpiuz/.zprofile
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

#to auto alias projects in hobby dir
for repo in $(ls ~/projects/hobby)
do
  alias $repo="cd ~/projects/hobby/$repo"
done

#to auto alias activate command for virtual envs in venv directory
for venv in $(ls ~/venvs)
do
  alias $venv"env"="source ~/venvs/$venv/bin/activate && $venv"
done

#kitty related
alias pic="kitty +kitten icat"
alias s="kitty +kitten ssh"
alias d="kitty +kitten diff"
alias themes="kitty +kitten themes"


#pyenv
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"

#need for opening other terminal text editors in kitty
 export TERM=xterm

# refer https://muhammadraza.me/2023/shell-functions/
function view_csv_pretty {
    if [ -z "$1" ]; then echo "Usage: view_csv_pretty <file.csv>"
    else cat "$1" | column -s, -t | less -F -S -X -K
    fi
}

function recently_modified() {
    recent_file=$(ls -t | head -n1)
    echo "Most recently modified file: $recent_file"
}

function compress_files() {
    if [ -z "$1" ]; then echo "Usage: compress_files <archive_name.zip> <file1> <file2> ..."
    else zip -r "$1" "${@:2}"
    fi
}


function search_text_in_files() {
    if [ -z "$1" ] || [ -z "$2" ]; then echo "Usage: search_text_in_files <directory> <search_term>"
    else grep -rnw "$1" -e "$2"
    fi
}

function process_with_most_memory() {
    ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head
}

function list_open_ports() {
    ss -tuln
}

function find_listening_ports() {
    if [ -z "$1" ]; then echo "Usage: find_listening_ports <pid>"
    else ss -tulnp | grep "$1"
    fi
}

export PATH="$HOME/bin:$PATH"

export EDITOR="code --wait"

export GLFW_IM_MODULE="ibus"